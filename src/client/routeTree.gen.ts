/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as protectedLayoutRouteImport } from './routes/(protected)/layout'
import { Route as authLayoutRouteImport } from './routes/(auth)/layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as protectedProfileRouteImport } from './routes/(protected)/profile'
import { Route as protectedGuestbookRouteImport } from './routes/(protected)/guestbook'
import { Route as protectedCounterRouteImport } from './routes/(protected)/counter'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'

const protectedLayoutRoute = protectedLayoutRouteImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRouteImport,
} as any)
const authLayoutRoute = authLayoutRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const protectedProfileRoute = protectedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => protectedLayoutRoute,
} as any)
const protectedGuestbookRoute = protectedGuestbookRouteImport.update({
  id: '/guestbook',
  path: '/guestbook',
  getParentRoute: () => protectedLayoutRoute,
} as any)
const protectedCounterRoute = protectedCounterRouteImport.update({
  id: '/counter',
  path: '/counter',
  getParentRoute: () => protectedLayoutRoute,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof protectedLayoutRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/counter': typeof protectedCounterRoute
  '/guestbook': typeof protectedGuestbookRoute
  '/profile': typeof protectedProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof protectedLayoutRouteWithChildren
  '/sign-in': typeof authSignInRoute
  '/counter': typeof protectedCounterRoute
  '/guestbook': typeof protectedGuestbookRoute
  '/profile': typeof protectedProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)': typeof authLayoutRouteWithChildren
  '/(protected)': typeof protectedLayoutRouteWithChildren
  '/(auth)/sign-in': typeof authSignInRoute
  '/(protected)/counter': typeof protectedCounterRoute
  '/(protected)/guestbook': typeof protectedGuestbookRoute
  '/(protected)/profile': typeof protectedProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/counter' | '/guestbook' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/counter' | '/guestbook' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/(auth)'
    | '/(protected)'
    | '/(auth)/sign-in'
    | '/(protected)/counter'
    | '/(protected)/guestbook'
    | '/(protected)/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authLayoutRoute: typeof authLayoutRouteWithChildren
  protectedLayoutRoute: typeof protectedLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(protected)/profile': {
      id: '/(protected)/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof protectedProfileRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/(protected)/guestbook': {
      id: '/(protected)/guestbook'
      path: '/guestbook'
      fullPath: '/guestbook'
      preLoaderRoute: typeof protectedGuestbookRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/(protected)/counter': {
      id: '/(protected)/counter'
      path: '/counter'
      fullPath: '/counter'
      preLoaderRoute: typeof protectedCounterRouteImport
      parentRoute: typeof protectedLayoutRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof authLayoutRoute
    }
  }
}

interface authLayoutRouteChildren {
  authSignInRoute: typeof authSignInRoute
}

const authLayoutRouteChildren: authLayoutRouteChildren = {
  authSignInRoute: authSignInRoute,
}

const authLayoutRouteWithChildren = authLayoutRoute._addFileChildren(
  authLayoutRouteChildren,
)

interface protectedLayoutRouteChildren {
  protectedCounterRoute: typeof protectedCounterRoute
  protectedGuestbookRoute: typeof protectedGuestbookRoute
  protectedProfileRoute: typeof protectedProfileRoute
}

const protectedLayoutRouteChildren: protectedLayoutRouteChildren = {
  protectedCounterRoute: protectedCounterRoute,
  protectedGuestbookRoute: protectedGuestbookRoute,
  protectedProfileRoute: protectedProfileRoute,
}

const protectedLayoutRouteWithChildren = protectedLayoutRoute._addFileChildren(
  protectedLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authLayoutRoute: authLayoutRouteWithChildren,
  protectedLayoutRoute: protectedLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
