/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedLayoutRouteImport } from './routes/_protectedLayout'
import { Route as AuthLayoutRouteImport } from './routes/_authLayout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedLayoutProfileRouteImport } from './routes/_protectedLayout/profile'
import { Route as ProtectedLayoutGuestbookRouteImport } from './routes/_protectedLayout/guestbook'
import { Route as ProtectedLayoutCounterRouteImport } from './routes/_protectedLayout/counter'
import { Route as AuthLayoutSignInRouteImport } from './routes/_authLayout/sign-in'

const ProtectedLayoutRoute = ProtectedLayoutRouteImport.update({
  id: '/_protectedLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_authLayout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedLayoutProfileRoute = ProtectedLayoutProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)
const ProtectedLayoutGuestbookRoute =
  ProtectedLayoutGuestbookRouteImport.update({
    id: '/guestbook',
    path: '/guestbook',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)
const ProtectedLayoutCounterRoute = ProtectedLayoutCounterRouteImport.update({
  id: '/counter',
  path: '/counter',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)
const AuthLayoutSignInRoute = AuthLayoutSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthLayoutSignInRoute
  '/counter': typeof ProtectedLayoutCounterRoute
  '/guestbook': typeof ProtectedLayoutGuestbookRoute
  '/profile': typeof ProtectedLayoutProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthLayoutSignInRoute
  '/counter': typeof ProtectedLayoutCounterRoute
  '/guestbook': typeof ProtectedLayoutGuestbookRoute
  '/profile': typeof ProtectedLayoutProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authLayout': typeof AuthLayoutRouteWithChildren
  '/_protectedLayout': typeof ProtectedLayoutRouteWithChildren
  '/_authLayout/sign-in': typeof AuthLayoutSignInRoute
  '/_protectedLayout/counter': typeof ProtectedLayoutCounterRoute
  '/_protectedLayout/guestbook': typeof ProtectedLayoutGuestbookRoute
  '/_protectedLayout/profile': typeof ProtectedLayoutProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/counter' | '/guestbook' | '/profile'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/counter' | '/guestbook' | '/profile'
  id:
    | '__root__'
    | '/'
    | '/_authLayout'
    | '/_protectedLayout'
    | '/_authLayout/sign-in'
    | '/_protectedLayout/counter'
    | '/_protectedLayout/guestbook'
    | '/_protectedLayout/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  ProtectedLayoutRoute: typeof ProtectedLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protectedLayout': {
      id: '/_protectedLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authLayout': {
      id: '/_authLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protectedLayout/profile': {
      id: '/_protectedLayout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedLayoutProfileRouteImport
      parentRoute: typeof ProtectedLayoutRoute
    }
    '/_protectedLayout/guestbook': {
      id: '/_protectedLayout/guestbook'
      path: '/guestbook'
      fullPath: '/guestbook'
      preLoaderRoute: typeof ProtectedLayoutGuestbookRouteImport
      parentRoute: typeof ProtectedLayoutRoute
    }
    '/_protectedLayout/counter': {
      id: '/_protectedLayout/counter'
      path: '/counter'
      fullPath: '/counter'
      preLoaderRoute: typeof ProtectedLayoutCounterRouteImport
      parentRoute: typeof ProtectedLayoutRoute
    }
    '/_authLayout/sign-in': {
      id: '/_authLayout/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthLayoutSignInRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
  }
}

interface AuthLayoutRouteChildren {
  AuthLayoutSignInRoute: typeof AuthLayoutSignInRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSignInRoute: AuthLayoutSignInRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface ProtectedLayoutRouteChildren {
  ProtectedLayoutCounterRoute: typeof ProtectedLayoutCounterRoute
  ProtectedLayoutGuestbookRoute: typeof ProtectedLayoutGuestbookRoute
  ProtectedLayoutProfileRoute: typeof ProtectedLayoutProfileRoute
}

const ProtectedLayoutRouteChildren: ProtectedLayoutRouteChildren = {
  ProtectedLayoutCounterRoute: ProtectedLayoutCounterRoute,
  ProtectedLayoutGuestbookRoute: ProtectedLayoutGuestbookRoute,
  ProtectedLayoutProfileRoute: ProtectedLayoutProfileRoute,
}

const ProtectedLayoutRouteWithChildren = ProtectedLayoutRoute._addFileChildren(
  ProtectedLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  ProtectedLayoutRoute: ProtectedLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
